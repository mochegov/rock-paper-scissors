/*
 * This file is generated by jOOQ.
 */
package mochegov.game.db.jooq.domain.tables.records;


import java.time.LocalDateTime;

import mochegov.game.db.jooq.domain.tables.Player;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Players
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRecord extends UpdatableRecordImpl<PlayerRecord> implements Record5<String, Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.PLAYER.PLAYER_NAME</code>. Player name
     */
    public void setPlayerName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.PLAYER.PLAYER_NAME</code>. Player name
     */
    public String getPlayerName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.PLAYER.NUMBER_WINS</code>. Numbers of wins
     */
    public void setNumberWins(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.PLAYER.NUMBER_WINS</code>. Numbers of wins
     */
    public Integer getNumberWins() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.PLAYER.NUMBER_LOSSES</code>. Numbers of losses
     */
    public void setNumberLosses(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.PLAYER.NUMBER_LOSSES</code>. Numbers of losses
     */
    public Integer getNumberLosses() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PUBLIC.PLAYER.CREATED_AT</code>. Creation timestamp
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.PLAYER.CREATED_AT</code>. Creation timestamp
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>PUBLIC.PLAYER.UPDATED_AT</code>. Update timestamp
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.PLAYER.UPDATED_AT</code>. Update timestamp
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Player.PLAYER.PLAYER_NAME;
    }

    @Override
    public Field<Integer> field2() {
        return Player.PLAYER.NUMBER_WINS;
    }

    @Override
    public Field<Integer> field3() {
        return Player.PLAYER.NUMBER_LOSSES;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Player.PLAYER.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Player.PLAYER.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getPlayerName();
    }

    @Override
    public Integer component2() {
        return getNumberWins();
    }

    @Override
    public Integer component3() {
        return getNumberLosses();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getPlayerName();
    }

    @Override
    public Integer value2() {
        return getNumberWins();
    }

    @Override
    public Integer value3() {
        return getNumberLosses();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    @Override
    public PlayerRecord value1(String value) {
        setPlayerName(value);
        return this;
    }

    @Override
    public PlayerRecord value2(Integer value) {
        setNumberWins(value);
        return this;
    }

    @Override
    public PlayerRecord value3(Integer value) {
        setNumberLosses(value);
        return this;
    }

    @Override
    public PlayerRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PlayerRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PlayerRecord values(String value1, Integer value2, Integer value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerRecord
     */
    public PlayerRecord() {
        super(Player.PLAYER);
    }

    /**
     * Create a detached, initialised PlayerRecord
     */
    public PlayerRecord(String playerName, Integer numberWins, Integer numberLosses, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Player.PLAYER);

        setPlayerName(playerName);
        setNumberWins(numberWins);
        setNumberLosses(numberLosses);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
